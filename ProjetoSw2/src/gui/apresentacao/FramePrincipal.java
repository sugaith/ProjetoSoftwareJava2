/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.apresentacao;

import gui.Documento;
import gui.formasGeometricas.FormaGeometrica;
import gui.formasGeometricas.Ponto;
import gui.uteis.Iterador;
import gui.uteis.ListaEncadeada;

import java.awt.event.ActionEvent;
import java.io.*;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Thiago Correa
 */
public class FramePrincipal extends javax.swing.JFrame {

    private Documento doc = new Documento();

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        //configura interface
        initComponents();

        //listener para posicao do mouse
        panelPrincipal.addListener4MousePos( labelPosicaoMouseX, labelPosicaoMouseY );
        doc.adicionaOuvinte(panelPrincipal);
        doc.adicionaOuvinte(panelTexto);



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTexto = new PanelTexto(doc);
        panelPrincipal = new PanelPrincipal(doc);
        labelPosicaoMouseX = new javax.swing.JLabel();
        labelPosicaoMouseY = new javax.swing.JLabel();
        menuItem_abrirTxt = new javax.swing.JMenuItem();
        menuItem_salvarTxt = new javax.swing.JMenuItem();
        menuItem_abrirBinaro = new javax.swing.JMenuItem();
        menuItem_salvarBinario = new javax.swing.JMenuItem();
        menuItem_abrirSerial = new javax.swing.JMenuItem();


        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Posição do Ponteiro:");

        jLabel2.setText("X:");

        labelPosicaoMouseX.setForeground(new java.awt.Color(255, 255, 255));
        labelPosicaoMouseX.setText("0");

        labelPosicaoMouseY.setForeground(new java.awt.Color(255, 255, 255));
        labelPosicaoMouseY.setText("0");

        jLabel5.setText("Y:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPosicaoMouseX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPosicaoMouseY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(603, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelPosicaoMouseX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelPosicaoMouseY))
                .addContainerGap())
        );

        panelTexto.setColumns(20);
//        panelTexto.setRows(5);
        panelTexto.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setViewportView(panelTexto);

        jMenu1.setText("Arquivo");

        jMenu3.setText("Arquivo Txt");

        menuItem_abrirTxt.setText("Abrir txt");
        menuItem_abrirTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_abrirTxtActionPerformed(evt);
            }
        });
        jMenu3.add(menuItem_abrirTxt);

        menuItem_salvarTxt.setText("Salvar txt");
        menuItem_salvarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_salvarTxtActionPerformed(evt);
            }
        });
        jMenu3.add(menuItem_salvarTxt);

        jMenu1.add(jMenu3);

        jMenu4.setText("Arquivo binário");

        menuItem_abrirBinaro.setText("Abrir Binário");
        menuItem_abrirBinaro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_abrirBinarioActionPerformed(evt);
            }
        });
        jMenu4.add(menuItem_abrirBinaro);

        menuItem_salvarBinario.setText("Salvar Binário");
        menuItem_salvarBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_salvarBinarioActionPerformed(evt);
            }
        });
        jMenu4.add(menuItem_salvarBinario);

        jMenu1.add(jMenu4);

        jMenu5.setText("Arquivo Serial");

        menuItem_abrirSerial.setText("Abrir Serial");
        menuItem_abrirSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_abrirSerialActionPerformed(evt);
            }
        });
        jMenu5.add(menuItem_abrirSerial);

        jMenuItem1.setText("Salvar Serial");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_salvarSerialActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenu1.add(jMenu5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem4.setText("Limpar Tela");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_limparTelaActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItem_limparTelaActionPerformed(ActionEvent evt) {
        doc.setListaFormas( new ListaEncadeada<FormaGeometrica>() );
        doc.atualizaOuvintes();
    }

    private void menuItem_abrirTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_abrirTxtActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filterTxt = new FileNameExtensionFilter("Arq texto", "txt");
        fileChooser.addChoosableFileFilter(filterTxt);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = fileChooser.getSelectedFile();
                System.out.println("arqivo selecionado====> " + selectedFile.getAbsolutePath());
                Path file = Paths.get(selectedFile.getCanonicalPath());
                Stream<String> lines = Files.lines(file,Charset.forName("UTF-8") );
                ListaEncadeada<FormaGeometrica> listaPoint_aux = new ListaEncadeada<>();
                lines.forEach(s -> {
                    System.out.println(s);
                    String px, py;
                    px = s.split(" ")[1];
                    py = s.split(" ")[2];
                    int x = Integer.valueOf(px);
                    int y = Integer.valueOf(py);
                    
                    Ponto p = new Ponto(x, y);

//                    listaPoint_aux.inserirFim(p);
                    doc.inserirFim( p );
                });
//                PanelPrincipal panel = (PanelPrincipal) panelPrincipal;
//                panel.setPoints(listaPoint_aux);
//                panel.repaint();

                doc.atualizaOuvintes();

            } catch (IOException e) {
                e.printStackTrace();
            }
        } 
    }//GEN-LAST:event_menuItem_abrirTxtActionPerformed

    private void menuItem_abrirSerialActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filterTxt = new FileNameExtensionFilter("Arq serial", "ser");
        fileChooser.addChoosableFileFilter(filterTxt);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            try {
                FileInputStream fi = new FileInputStream(fileToSave);
                ObjectInputStream oi = new ObjectInputStream(fi);

                // Read objects
                Documento obj = (Documento) oi.readObject();
                oi.close();
                fi.close();

                doc.setListaFormas( obj.getListaFormas() );
//                this.doc = obj;

                doc.atualizaOuvintes();
            } catch (IOException e) {
                e.printStackTrace();
            }catch (ClassNotFoundException e) {
                e.printStackTrace();
            }
        }
    }

    private void menuItem_salvarSerialActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Salvar como");
        FileNameExtensionFilter filterTxt = new FileNameExtensionFilter("Arq serial", "ser");
        fileChooser.addChoosableFileFilter(filterTxt);

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try {
                File fileToSave = fileChooser.getSelectedFile();
                Path file = Paths.get(fileToSave.getCanonicalPath() + ".ser");

                FileOutputStream f = new FileOutputStream( file.toString() );
                ObjectOutputStream o = new ObjectOutputStream(f);
                o.writeObject(doc);
                o.close();
                f.close();
                System.out.println("arquivo salvo====> " + fileToSave.getAbsolutePath());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    private void menuItem_salvarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_salvarTxtActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Salvar como");  
        FileNameExtensionFilter filterTxt = new FileNameExtensionFilter("Arq texto", "txt");
        fileChooser.addChoosableFileFilter(filterTxt);

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();            
            try {
                List<String> lines = new ArrayList<>();

//                PanelPrincipal panel = (PanelPrincipal) panelPrincipal;
//                for (int i=0; i<panel.getPoints().getTamanho(); i++){
////                    Point p = panel.getPoints().pesquisar(i);
//                    Ponto p = panel.getPoints().pesquisar(i);
////                    Double x = p.getX();
////                    Double y = p.getY();
//
//                    String line = "Ponto " + p.getX() + " " + p.getY();
//                    lines.add(line);
//                }

                //todo novo salvar com forma
                Iterador<FormaGeometrica> it = doc.getIterador();
                FormaGeometrica forma;
                while((forma = it.proximo()) != null) {
                    String line = forma.toTextLine();
                    lines.add(line);
                }

                Path file = Paths.get(fileToSave.getCanonicalPath() + ".txt");
                Files.write(file, lines, Charset.forName("UTF-8"));
                //Files.write(file, lines, Charset.forName("UTF-8"), StandardOpenOption.APPEND);
                System.out.println("arquivo salvo====> " + fileToSave.getAbsolutePath());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_menuItem_salvarTxtActionPerformed

    private void menuItem_salvarBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_salvarBinarioActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Salvar como");  
        FileNameExtensionFilter filterBin = new FileNameExtensionFilter("Arq Binario", "bin");
        fileChooser.addChoosableFileFilter(filterBin);

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try {
//                File fileToSave = fileChooser.getSelectedFile();
                File fileToSave = new File( fileChooser.getSelectedFile().getCanonicalPath() + ".bin" );
                ByteArrayOutputStream baos = new ByteArrayOutputStream();

//                PanelPrincipal panel = (PanelPrincipal) panelPrincipal;
//                for (int i=0; i < panel.getPoints().getTamanho(); i++){
////                    Point p = panel.getPoints().pesquisar(i);
//                    Ponto p = panel.getPoints().pesquisar(i);
////                    Double x = p.getX();
////                    Double y = p.getY();
//                    int repr_ponto = 1;
//                    baos.write(repr_ponto);
////                    baos.write(x.intValue());
////                    baos.write(y.intValue());
//                    baos.write(p.getX());
//                    baos.write(p.getY());
//                }

                //todo novo salvar com forma OK
                Iterador<FormaGeometrica> it = doc.getIterador();
                FormaGeometrica forma;
                while((forma = it.proximo()) != null) {
                    baos.write( forma.toByteArray() );
                }
                
                FileOutputStream fos = new FileOutputStream(fileToSave);
                fos.write(baos.toByteArray());
                fos.close();
                
                System.out.println("arquivo salvo====> " + fileToSave.getAbsolutePath());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_menuItem_salvarBinarioActionPerformed

    private void menuItem_abrirBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_abrirBinarioActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filterTxt = new FileNameExtensionFilter("Arq binario", "bin");
        fileChooser.addChoosableFileFilter(filterTxt);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = fileChooser.getSelectedFile();
                System.out.println("arqivo selecionado====> " + selectedFile.getAbsolutePath());
                Path file = Paths.get(selectedFile.getCanonicalPath());

                byte[] fileContent = Files.readAllBytes(file);
                int i=0;
                while (i<fileContent.length){
                    //le primeiro byte INDENTIFICADOR (por enquanto apenas ponto)
                    byte byteID = fileContent[i];

                    if (byteID == Ponto.getIdentificadorBinario()){
                        int qtPontos = 2;

                        byte[] arrayForma = Arrays.copyOfRange(fileContent, i+1, i+1+ qtPontos);
                        Ponto p = new Ponto( arrayForma );
                        doc.inserirFim( p );

                        //todo acrescenta depenendo da forma
                        i += qtPontos + 1;
                    }


                    //todo substutuir por switch-case de formas
                }

                doc.atualizaOuvintes();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_menuItem_abrirBinarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private PanelPrincipal panelPrincipal;
    private PanelTexto panelTexto;
    private javax.swing.JLabel labelPosicaoMouseX;
    private javax.swing.JLabel labelPosicaoMouseY;

    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuItem_abrirBinaro;
    private javax.swing.JMenuItem menuItem_abrirSerial;
    private javax.swing.JMenuItem menuItem_abrirTxt;
    private javax.swing.JMenuItem menuItem_salvarBinario;
    private javax.swing.JMenuItem menuItem_salvarTxt;
    // End of variables declaration//GEN-END:variables
}
